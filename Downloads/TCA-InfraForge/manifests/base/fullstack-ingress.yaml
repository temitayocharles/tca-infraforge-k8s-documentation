apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fullstack-app-ingress
  namespace: fullstack-app
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - temitayocharles.online
    - www.temitayocharles.online
    secretName: temitayocharles-tls
  rules:
  - host: temitayocharles.online
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-app
            port:
              number: 8080
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: backend-api
            port:
              number: 3000
  - host: www.temitayocharles.online
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-app
            port:
              number: 8080
#   tls:
#   - hosts:
#     - fullstack-app.local
#     secretName: fullstack-app-tls
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ingress-nginx-controller
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
data:
  use-forwarded-headers: "true"
  proxy-real-ip-cidr: "0.0.0.0/0"
  proxy-body-size: "50m"
