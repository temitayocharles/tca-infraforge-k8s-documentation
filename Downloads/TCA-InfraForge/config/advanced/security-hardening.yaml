apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: enterprise-security-policy
  namespace: default
spec:
  selector:
    matchLabels:
      security: enterprise
  action: ALLOW
  rules:
  - from:
    - source:
        ipBlocks: ["10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16"]
    to:
    - operation:
        methods: ["GET"]
        paths: ["/health", "/metrics"]
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: argocd-strict-access
  namespace: argocd
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-server
  action: ALLOW
  rules:
  - from:
    - source:
        requestPrincipals: ["cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account"]
    to:
    - operation:
        methods: ["GET", "POST"]
        paths: ["/login", "/api/v1/*"]
---
apiVersion: security.istio.io/v1beta1
kind: RequestAuthentication
metadata:
  name: jwt-auth-policy
  namespace: default
spec:
  selector:
    matchLabels:
      app: secure-app
  jwtRules:
  - issuer: "https://your-auth-provider.com"
    jwksUri: "https://your-auth-provider.com/.well-known/jwks.json"
    forwardOriginalToken: true
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: enterprise-network-policy
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: enterprise-app
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: istio-system
    - podSelector:
        matchLabels:
          istio: ingressgateway
    ports:
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 443
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
